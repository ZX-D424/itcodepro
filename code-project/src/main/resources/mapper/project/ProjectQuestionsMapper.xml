<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.mapper.ProjectQuestionsMapper">
    
    <resultMap type="ProjectQuestions" id="ProjectQuestionsResult">
        <result property="id"    column="id"    />
        <result property="moduleId"    column="module_id"    />
        <result property="levelId"    column="level_id"    />
        <result property="userId"    column="user_id"    />
        <result property="imgUrl"    column="img_url"    />
        <result property="mark"    column="mark"    />
        <result property="fileUrl"    column="file_url"    />
        <result property="submitTime"    column="submit_time"    />
        <result property="startTime"    column="start_time"    />
        <result property="checkUserId"    column="check_user_id"    />
        <result property="checkTime"    column="check_time"    />
        <result property="score"    column="score"    />
        <result property="checkMark"    column="check_mark"    />
        <result property="moduleName"    column="moduleName"    />
        <result property="levelName"    column="levelName"    />
        <result property="userName"    column="userName"    />
        <result property="checkUserName"    column="checkUserName"    />
        <result property="levelCode"    column="levelCode"    />
        <result property="levelInfo"    column="levelInfo"    />
        <result property="levelImg"    column="levelImg"    />

    </resultMap>

    <sql id="selectProjectQuestionsVo">
        select
            qe.*,
            m.name as moduleName,
            l.level_title as levelName,
            l.level_code as levelCode,
            l.level_info as levelInfo,
            l.img_url as levelImg,
            u.nick_name as userName,
            cu.nick_name as checkUserName
        from
            project_questions as qe
        left join project_module as m on qe.module_id = m.id
        left join project_level as l on qe.level_id = l.id
        left join sys_user as u on qe.user_id = u.user_id
        left join sys_user as cu on qe.check_user_id = cu.user_id
    </sql>

    <select id="selectProjectQuestionsList" parameterType="ProjectQuestions" resultMap="ProjectQuestionsResult">
        <include refid="selectProjectQuestionsVo"/>
        <where>
            <if test="moduleId != null "> and qe.module_id = #{moduleId}</if>
            <if test="levelId != null "> and qe.level_id = #{levelId}</if>
            <if test="userId != null "> and u.nick_name = #{userName}</if>
        </where>
        order by l.level_code asc
    </select>
    
    <select id="selectProjectQuestionsById" parameterType="Long" resultMap="ProjectQuestionsResult">
        <include refid="selectProjectQuestionsVo"/>
        where qe.id = #{id}
    </select>

    <insert id="insertProjectQuestions" parameterType="ProjectQuestions" useGeneratedKeys="true" keyProperty="id">
        insert into project_questions
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="moduleId != null">module_id,</if>
            <if test="levelId != null">level_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="imgUrl != null">img_url,</if>
            <if test="mark != null">mark,</if>
            <if test="fileUrl != null">file_url,</if>
            <if test="submitTime != null">submit_time,</if>
            <if test="startTime != null">start_time,</if>
            <if test="checkUserId != null">check_user_id,</if>
            <if test="checkTime != null">check_time,</if>
            <if test="score != null">score,</if>
            <if test="checkMark != null">check_mark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="moduleId != null">#{moduleId},</if>
            <if test="levelId != null">#{levelId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="imgUrl != null">#{imgUrl},</if>
            <if test="mark != null">#{mark},</if>
            <if test="fileUrl != null">#{fileUrl},</if>
            <if test="submitTime != null">#{submitTime},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="checkUserId != null">#{checkUserId},</if>
            <if test="checkTime != null">#{checkTime},</if>
            <if test="score != null">#{score},</if>
            <if test="checkMark != null">#{checkMark},</if>
         </trim>
    </insert>

    <update id="updateProjectQuestions" parameterType="ProjectQuestions">
        update project_questions
        <trim prefix="SET" suffixOverrides=",">
            <if test="moduleId != null">module_id = #{moduleId},</if>
            <if test="levelId != null">level_id = #{levelId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="imgUrl != null">img_url = #{imgUrl},</if>
            <if test="mark != null">mark = #{mark},</if>
            <if test="fileUrl != null">file_url = #{fileUrl},</if>
            <if test="submitTime != null">submit_time = #{submitTime},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="checkUserId != null">check_user_id = #{checkUserId},</if>
            <if test="checkTime != null">check_time = #{checkTime},</if>
            <if test="score != null">score = #{score},</if>
            <if test="checkMark != null">check_mark = #{checkMark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteProjectQuestionsById" parameterType="Long">
        delete from project_questions where id = #{id}
    </delete>

    <delete id="deleteProjectQuestionsByIds" parameterType="String">
        delete from project_questions where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectProjectQuestionsByUserIdAndLevelId" parameterType="Long" resultType="Long">
        select
            id
        from
            project_questions
        where
            module_id = #{moduleId} and user_id = #{userId} and level_id = #{levelId}
    </select>


    <select id="selectUsersCompletedLastLevel" resultType="ProjectQuestions">
        SELECT
            q.*
        FROM
            project_questions q
                INNER JOIN (
                SELECT
                    module_id,
                    MAX(level_code) AS max_level
                FROM
                    project_module
                GROUP BY
                    module_id
            ) m ON q.module_id = m.module_id AND q.level_id = m.max_level
        WHERE
            DATE(q.submit_time) = #{yesterday}
          AND q.score IS NOT NULL
    </select>


    <select id="getModuleScoreByUserId" resultType="java.lang.Double">
        SELECT COALESCE(SUM(score), 0.0) AS module_score
        FROM project_questions
        WHERE user_id = #{userId}
          AND module_id = #{moduleId}
          AND score IS NOT NULL
    </select>

    <select id=" getUserTotalScore" resultType="java.lang.Double">
        SELECT COALESCE(SUM(total_score),0.0)
        FROM project_score_rank
        WHERE user_id = #{userId}
          AND score IS NOT NULL
    </select>

</mapper>