<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.mapper.ProjectScoreRankMapper">
    
    <resultMap type="ProjectScoreRank" id="ProjectScoreRankResult">
        <result property="id"    column="id"    />
        <result property="moduleId"    column="module_id"    />
        <result property="place"    column="place"    />
        <result property="score"    column="score"    />
        <result property="totalScore"    column="totalScore"    />
        <result property="userId"    column="user_id"    />
        <result property="nickName"    column="nickName"    />
        <result property="userName"    column="userName"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="scoreTime"    column="score_time"    />
        <result property="totalRank"    column="totalRank"    />
        <result property="moduleRank"    column="moduleRank"    />
        <result property="moduleName"    column="moduleName"    />
    </resultMap>

    <sql id="selectProjectScoreRankVo">
        select r.id, r.module_id, m.name as moduleName, r.place, r.user_id, u.nick_name as nickName,
               u.user_name as userName, r.create_time, r.score,r.total_score,
               r.create_by, r.update_by, r.update_time,
               r.score_time from project_score_rank r
        left join sys_user u on u.user_id = r.user_id
        left join project_module m on m.id = r.module_id
    </sql>

    <select id="selectProjectScoreRankList" parameterType="ProjectScoreRank" resultMap="ProjectScoreRankResult">
        <include refid="selectProjectScoreRankVo"/>
        <where>  
            <if test="moduleId != null "> and module_id = #{moduleId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
        </where>
    </select>
    
    <select id="selectProjectScoreRankById" parameterType="Long" resultMap="ProjectScoreRankResult">
        <include refid="selectProjectScoreRankVo"/>
        where id = #{id}
    </select>

    <insert id="insertProjectScoreRank" parameterType="ProjectScoreRank" useGeneratedKeys="true" keyProperty="id">
        insert into project_score_rank
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="moduleId != null">module_id,</if>
            <if test="place != null">place,</if>
            <if test="userId != null">user_id,</if>
            <if test="score != null">score,</if>
            <if test="totalScore != null">total_score,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="scoreTime != null">score_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="moduleId != null">#{moduleId},</if>
            <if test="place != null">#{place},</if>
            <if test="userId != null">#{userId},</if>
            <if test="score != null">#{score},</if>
            <if test="totalScore != null">#{totalScore},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="scoreTime != null">#{scoreTime},</if>
         </trim>
    </insert>

    <update id="updateProjectScoreRank" parameterType="ProjectScoreRank">
        update project_score_rank
        <trim prefix="SET" suffixOverrides=",">
            <if test="moduleId != null">module_id = #{moduleId},</if>
            <if test="place != null">place = #{place},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="scoreTime != null">score_time = #{scoreTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteProjectScoreRankById" parameterType="Long">
        delete from project_score_rank where id = #{id}
    </delete>

    <delete id="deleteProjectScoreRankByIds" parameterType="String">
        delete from project_score_rank where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectProjectModuleRankList"  parameterType="Long" resultMap="ProjectScoreRankResult">
        SELECT
            s.*,
            u.nick_name as nickName
        FROM
            project_score_rank s
                LEFT JOIN
            sys_user u ON u.user_id = s.user_id
        WHERE
            s.module_id = #{moduleId}
        ORDER BY
            s.score DESC
    </select>

    <select id="selectProjectTotalRankList"  resultMap="ProjectScoreRankResult">
        SELECT
            s.user_id,
            u.nick_name as nickName,
            SUM(s.score) AS totalScore
        FROM
            project_score_rank s
                LEFT JOIN
            sys_user u ON u.user_id = s.user_id
        GROUP BY
            s.user_id
        ORDER BY
            totalScore DESC
    </select>

    <select id="selectModuleScoreByUserId"  resultMap="ProjectScoreRankResult">
        <include refid="selectProjectScoreRankVo"/>
        where r.user_id = #{userId} and r.module_id = #{moduleId}
    </select>

    <select id="getRank"  resultType="java.lang.Long">
        SELECT
            (SELECT COUNT(*) + 1
             FROM project_score_rank
             WHERE module_id = #{moduleId}
               AND score > (SELECT score
                            FROM project_score_rank
                            WHERE user_id = #{userId}
                              AND module_id = #{moduleId})) AS rank_num
        FROM project_score_rank
        WHERE user_id = #{userId}
          AND module_id = #{moduleId};
    </select>

    <select id="getTotalRank"  parameterType="Long"  resultMap="ProjectScoreRankResult">
        SELECT
            user_id,
            nickName,
            totalScore,
            totalRank
        FROM (
                 SELECT
                     r.user_id,
                     u.nick_name as nickName,
                     SUM(r.score) AS totalScore,
                     DENSE_RANK() OVER (ORDER BY SUM(r.score) DESC) AS totalRank
                 FROM
                     project_score_rank r
                         LEFT JOIN sys_user u ON u.user_id = r.user_id
                 GROUP BY
                     r.user_id
             ) AS user_scores
        WHERE user_id = #{userId}
    </select>

    <select id="getPersonalModuleRank"   resultMap="ProjectScoreRankResult">
        SELECT
            user_id,
            nickName,
            score,
            moduleRank
        FROM (
                 SELECT
                     r.user_id,
                     r.module_id,
                     u.nick_name as nickName,
                     r.score,
                     DENSE_RANK() OVER (PARTITION BY r.module_id ORDER BY r.score DESC) AS moduleRank
                 FROM
                     project_score_rank r
                         LEFT JOIN sys_user u ON u.user_id = r.user_id
             ) AS user_scores
        WHERE
            user_id = #{userId}
          AND module_id = #{moduleId}
    </select>

</mapper>