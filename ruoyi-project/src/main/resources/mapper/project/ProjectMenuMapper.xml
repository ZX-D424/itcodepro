<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.mapper.ProjectMenuMapper">
    
    <resultMap type="ProjectMenu" id="ProjectMenuResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="isDisabled"    column="is_disabled"    />
        <result property="sortNum"    column="sort_num"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectProjectMenuVo">
        select id, name, is_disabled, sort_num, create_by, create_time, update_by, update_time from project_menu
    </sql>

    <select id="selectProjectMenuList" parameterType="ProjectMenu" resultMap="ProjectMenuResult">
        <include refid="selectProjectMenuVo"/>
        <where>
            is_disabled  = 0
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="isDisabled != null "> and is_disabled = #{isDisabled}</if>
            <if test="sortNum != null "> and sort_num = #{sortNum}</if>
        </where>
        order by sort_num,create_time asc
    </select>

    <select id="getMenuDataList"  resultMap="ProjectMenuResult">
        <include refid="selectProjectMenuVo"/>
        <where>
            is_disabled  = 0
        </where>
        order by sort_num,create_time asc
    </select>


    <select id="selectProjectMenuById" parameterType="Long" resultMap="ProjectMenuResult">
        <include refid="selectProjectMenuVo"/>
        where id = #{id}
    </select>

    <insert id="insertProjectMenu" parameterType="ProjectMenu" useGeneratedKeys="true" keyProperty="id">
        insert into project_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="isDisabled != null">is_disabled,</if>
            <if test="sortNum != null">sort_num,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTitme != null">create_titme,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="isDisabled != null">#{isDisabled},</if>
            <if test="sortNum != null">#{sortNum},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTitme != null">#{createTitme},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateProjectMenu" parameterType="ProjectMenu">
        update project_menu
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="isDisabled != null">is_disabled = #{isDisabled},</if>
            <if test="sortNum != null">sort_num = #{sortNum},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteProjectMenuById" parameterType="Long">
        delete from project_menu where id = #{id}
    </delete>

    <delete id="deleteProjectMenuByIds" parameterType="String">
        delete from project_menu where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>